<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>linux on A Notebook of Extendswind</title>
    <link>https://extendswind.top/tags/linux/</link>
    <description>Recent content in linux on A Notebook of Extendswind</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>本站原创文章遵循CC-BY 4.0版权协议，转载注明出处即可</copyright>
    <lastBuildDate>Sat, 04 Dec 2021 00:00:00 +0800</lastBuildDate><atom:link href="https://extendswind.top/tags/linux/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>syncthing文件同步网盘配置</title>
      <link>https://extendswind.top/posts/technical/syncthing_install_for_vps/</link>
      <pubDate>Sat, 04 Dec 2021 00:00:00 +0800</pubDate>
      
      <guid>https://extendswind.top/posts/technical/syncthing_install_for_vps/</guid>
      <description>在需要同步的文件不太大时，坚果云一类的网盘的效果不错，安装软件即可，不需要折腾还功能多。不考虑同步功能，只是想要存数据的话，NAS一般就可以满足要求。owncloud、nextcloud一类的私有云网盘提供了更多的功能，如可以浏览器查看分享文件。
相比之下，Syncthing只是一个纯粹的文件同步软件。主要优点是配置简单，没有其它的依赖，配置局域网的文件同步以及vps的文件同步实现起来容易，不像私有网盘程序依赖一套数据库、php、web服务等。但是缺点也很明显，没有什么多余的功能，无法单独上传和下载文件，也不能直接分享单个文件。
简单配置 linux的包管理器大多可以直接安装，然后运行Syncthing就可以启动，默认只提供了浏览器的web端管理UI，在 127.0.0.1:8384 访问。
两个节点都安装启动后，可以直接通过id添加对方。运行Syncting的各个节点之间没有主从的区别，通过共享文件夹的方式全部同步为相同的文件状态。添加后需要在对方的web UI中确认。
如果在没有桌面环境的linux服务器（如VPS）上安装，需要在 ~/.config/syncthing/config.xml 配置中将127.0.0.1改为0.0.0.0，防火墙放开8384端口、22000端口。然后在本地浏览器中用服务器 ip:8384 访问。
直连服务器配置 在局域网内或者连接有公网ip的主机时，会默认使用直连的方式。当两个主机不能直接连接，或者网络状态不好时，会通过relay中继服务器连接。
VPS的web UI中直连的listener选项卡为：
 quic://0.0.0.0:22000
tcp://0.0.0.0:22000
 连接VPS时，在address选项中将上面0.0.0.0替换成VPS服务器的ip，替代默认的dynamic即可。
文件版本保存 一个文件可能会修改多次，文件夹的设置中有File Version选项，可以按时间、修改次数、删除等方式备份多个版本，具体设置界面有说明。
安全相关 每个节点的id不包含隐私信息，连接时以及分享文件夹时都需要在两个节点的web UI中确认，id没必要加密保存。节点之间的数据传输通过TLS加密，不用太考虑中心服务器导致的隐私问题。
web UI 页面直接暴露给外网可能会容易被被端口扫描后攻击，可以设置密码加强安全性。或者通过反向代理隐藏web UI的端口，具体配置在 https://docs.syncthing.net/users/reverseproxy.html。关于反向代理踩的一个小坑：nginx设置中的location /syncthing/后面的斜杠不能漏。
文件分享 Syncthing不支持文件分享，只能间接的处理，下面放个简单的nginx配置解决web服务中分享某个文件文件的下载功能。（至于上传，可以考虑sftp、samba一类的服务，这个比较弱）
 location /file_share/ { alias /home/user/Syncthing/public/; autoindex on; autoindex_exact_size off; # 文件大小显示MB，GB单位，默认为b； autoindex_localtime on; # 服务器本地时区显示文件修改日期 } 基本原理 同步设计上首先将大文件切割成block，小文件直接单独作为block（和HDFS的操作类似）。对每个block计算hash值，通过hash值判断文件的完整性和变化（可以自动识别重命名）。当发生文件变化时，操作系统会通知Syncthing程序，Syncthing程序之间传输元数据信息以及变化的数据。
连接上每个Syncthing程序通过唯一id识别，默认打开了本地发现（local discovery）和全网发现（global discovery）。本地发现能够在添加其它节点时自动找到局域网内的其它服务，全局发现依赖了额外的官方服务器，能根据id直接找到对应的节点（不确定ip是通过id算出来的还是全局发现找到的）。
为了使不在同一个局域网下的节点能够同步，官方提供了relay服务器作为中介，不在局域网内的同步默认可以直接通过官方relay服务器进行，也可以自己在有公网ip的机器上架服务。relay服务默认为开启状态，局域网内的节点可能由于网络状况等问题从直连转为relay连接，在配置的web GUI中的Remote Devices下的address中可以看到是直接的ip还是带relay的ip，此处配置可以修改。
Sycnthing默认有几个地方会连接官方服务器：1. 使用数据收集（第一次打开web UI会询问是否同意）；2. 全局发现；3. relay中继服务器。为了方便无所谓，如果只是想单纯在网络可以互通的环境下使用文件同步，可以考虑在设置中把这几个都关了。</description>
    </item>
    
    <item>
      <title>REFInd默认启动上次的启动项</title>
      <link>https://extendswind.top/posts/technical/refind_set_default_to_last_start_item/</link>
      <pubDate>Wed, 20 May 2020 22:30:00 +0800</pubDate>
      
      <guid>https://extendswind.top/posts/technical/refind_set_default_to_last_start_item/</guid>
      <description>windows和linux的双系统偶尔需要切换，设置一个默认启动项没看到直接的资料。
修改配置文件 /boot/efi/EFI/refind/refind.conf（linux下），相关的项都有说明，但是这个和常规差距略大。
默认启动项的设置在default_selection 项，可以设置为如下：
default_selection &amp;quot;+,Microsoft,vmlinuz&amp;quot;
Microsoft表示windows系统，vmlinuz表示linux系统，+号表示选择上一次打开的选项。</description>
    </item>
    
    <item>
      <title>系统启动时卡在 &#39;TLP System startup/shutdown&#39; </title>
      <link>https://extendswind.top/posts/technical/startup_stuck_in_tlp_service/</link>
      <pubDate>Wed, 20 May 2020 22:30:00 +0800</pubDate>
      
      <guid>https://extendswind.top/posts/technical/startup_stuck_in_tlp_service/</guid>
      <description>问题 manjaro 在笔记本上启动时卡住（manjaro-awesome + refind引导），停在
TLP System startup/shutdown
TLP 提供优秀的 Linux 高级电源管理功能（详见arch wiki），不知道为什么在启动后卡主。
解决 没有太研究，一般启动卡住的问题和内核参数、驱动等关系比较大，具体的不太好找，可以试试下面的三种方案。
方案一：换内核（可能是硬件的驱动问题导致，对新一点的设备换新内核可能会有效）。
方案二：关闭TLP服务的开机启动， systemctl disable tlp.service 。
方案三：将refind引导改为grub引导（难道启动的时候两者的内核参数不一致？）</description>
    </item>
    
    <item>
      <title>华为笔记本magicbook14 AMD安装Manjaro Linux的一些踩坑配置</title>
      <link>https://extendswind.top/posts/technical/manjaro_magicbook_install_and_configuration/</link>
      <pubDate>Wed, 20 May 2020 16:30:00 +0800</pubDate>
      
      <guid>https://extendswind.top/posts/technical/manjaro_magicbook_install_and_configuration/</guid>
      <description>虽然是linux版出厂自带deepin专业版，但是随后发的一键win10装机U盘一声不坑的把deepin格式化了，售后还只在线下才提供安装包&amp;hellip;
笔记本参数 Magicbook 14 (2019)
 AMD R5 3500U 8G + 512G  内核 不同的内核在这个笔记本的表现差距略大。当前（2020年-4月）测试过的内核里，只有linux56运行比较平稳。LTS的414/419直接开机黑屏，好像有一个是由于TLP服务的问题，systemctl disable tlp可以解决，TLP提供了电源管理功能，禁止了不知道影响有多大。LTS的linux54在睡眠时仍能听到风扇转动，无法正常睡眠。
当前的linux56的主要问题（其它内核也存在）：
 指纹识别不能用 麦克风禁音键不能用 风扇无法控制 (好像没有现成的驱动）  Huawei-WMI 相当于华为为自己的笔记本添加的驱动程序，具体介绍可以参考下面的链接。
https://github.com/aymanbagabas/Huawei-WMI
主要的Features：
  Function hotkeys, implemented in v1.0 Micmute LED, implemented in v2.0. Updated in v3.0 to work with newer laptops. Battery protection, implemented in v3.0. Updated in v3.3 to use battery charge API. Fn-lock, implemented v3.0.   NOTE: Version v2.0 is the one in mainline kernel &amp;gt;= 5.</description>
    </item>
    
    <item>
      <title>Manjaro内核编译</title>
      <link>https://extendswind.top/posts/technical/manjaro_kernel_compile/</link>
      <pubDate>Tue, 19 May 2020 22:30:00 +0800</pubDate>
      
      <guid>https://extendswind.top/posts/technical/manjaro_kernel_compile/</guid>
      <description>重新编译内核可以修改编译时的参数，使内核在运行时更高效的支持本地硬件。Manjaro团队在gitlab上放了Manjaro内核的编译文件，稍加修改即可使用自己的选项编译。
主要参考论坛中Manjaro团队的philm的回答 https://forum.manjaro.org/t/how-to-compile-the-mainline-kernel-the-manjaro-way/51700/35
Gitlab 仓库 philm提到了manjaro在gitlab上编译内核的仓库。https://gitlab.manjaro.org/packages/core/linux56.git 后面使用不同的linux版本号。
仓库文件介绍 仓库中不同后缀文件的作用
  files ending with .patch should be clear. These are adjustments we think will fit for our distro best. files starting with config are our modified settings on how we configure the kernel on our end. files starting with linux are specific files to post configure the system. They are used either by pacman or mkinitcpio, which configures the initramfs image.</description>
    </item>
    
    <item>
      <title>一次修复linux的efi引导的集中方法总结记录</title>
      <link>https://extendswind.top/posts/technical/grub_uefi_repair/</link>
      <pubDate>Tue, 26 Nov 2019 20:59:49 +0800</pubDate>
      
      <guid>https://extendswind.top/posts/technical/grub_uefi_repair/</guid>
      <description>起因：EFI分区被删除导致引导问题。
症状：
  通过安装其它系统的方式。正好想试试其它的linux发行版，就在另一个分区装了deepin，完成后硬盘没有发现UEFI引导；然后又尝试装了openSUSE，仍没在硬盘发现UEFI引导。（失败）
  通过live cd重新在efi分区安装grub。（wiki推荐的一般方式，仍失败）
  通过live cd安装refind。（仍不行）
  安装的系统可以通过manjaro live cd直接boot。
  安装win10可以发现UEFI的引导方式（只启动win10，安装grub也只启动win10）
  引导的问题网上的解决方案很多，对于一些新的电脑UEFI的方式应该很好修复，但一些比较老的电脑可能出现各种坑问题，用legacy的引导还是稳定一点。
UEFI的引导通过grub的各种安装尝试都无法被主板识别，一直检测不到硬盘UEFI的启动项。怀疑主板并不支持linux grub2写入的UEFI引导信息，只支持windows的。最后通过安装win10，用refind覆盖win10的efi启动条目解决问题。
最常规的修复方式 通过live cd 将系统烧入U盘，启动U盘进入系统后修复。涉及两种方式：
 通过boot-repair grub-install 命令安装  还有通过grub命令行的方式，不常用没折腾。
建议烧入的系统为ubuntu和manjaro。deepin的live cd在我的电脑上有显示的bug，而且添加ppa有一点坑。openSUSE上的grub命令和debian系arch系不怎么一样。ubuntu的主要优点在于可以通过安装boot-repair进行一键修复，manjaro和arch的live cd提供了直接的manjaro-chroot以及arch-chroot，进入后直接安装grub就行，而且manjaro的live cd支持直接引导启动efi分区中的系统。
在下面的两种操作之前，最好通过gparted等软件新建一个efi分区（fat32,一般几十兆，openSUSE建议不小于500M，带efi标签）。
基于ubuntu的boot-repair 网上的资料多操作也不复杂，主要注意U盘从UEFI模式启动。
sudo add-apt-repository ppa:yannubuntu/boot-repair -y sudo apt-get update sudo apt-get install boot-repair -y sudo boot-repair grub-install 命令安装 使用manjaro live cd，其它的系统可能需要安装grub2、efibootmgr、grub-efi-amd64、os-prober等包。
以下需要root权限，sudo -i或命令前加sudo
1、 查看要引导系统的分区和efi分区的编号（fdisk -l） 2、 挂载引导系统的分区（一般 mount /dev/sda4 /mnt） 3、 挂载efi分区到系统分区的/boot/efi目录（`mount /dev/sda2 /mnt/boot/efi） 4、 chroot到硬盘系统分区</description>
    </item>
    
    <item>
      <title>linux 关闭主板上的蜂鸣器声音</title>
      <link>https://extendswind.top/posts/technical/mainboard_speaker_close/</link>
      <pubDate>Fri, 25 Jan 2019 10:59:49 +0800</pubDate>
      
      <guid>https://extendswind.top/posts/technical/mainboard_speaker_close/</guid>
      <description>在从deepin的kdd桌面换到xfce桌面后，命令行和界面操作上动不动会让主机响一声。
manjaro的xfce版也是如此，不知道是不是linux下xfce的通病。
主要是搜索的时候百度的结果很奇葩&amp;hellip;
用关键字 beep of xfce4 搜到了arch wiki下的内容，原来这玩意叫pc speaker，针对不同的情况有不同的解决方案。
最简单粗暴的方式 内核中加载了pcspkr模块导致的主板声音，rmmod移除此模块，然后/etc/modprobe.d文件夹下加入黑名单，使开机过程不加载。
  rmmod pcspkr echo &amp;ldquo;blacklist pcspkr&amp;rdquo; &amp;gt; /etc/modprobe.d/nobeep.conf 具体参考 https://wiki.archlinux.org/index.php/PC_speaker</description>
    </item>
    
    <item>
      <title>manjaro AwesomeWM 上使用双显示器</title>
      <link>https://extendswind.top/posts/technical/dual_monitor_manjaro_awesome/</link>
      <pubDate>Thu, 24 Jan 2019 21:59:49 +0800</pubDate>
      
      <guid>https://extendswind.top/posts/technical/dual_monitor_manjaro_awesome/</guid>
      <description>安装manjaro时使用独显的单显示器，在主板上接第二个显示器一直没反应。
几个问题和解决 BIOS里检查是否关闭了集显开关 大多数显卡的默认设置都会在识别独显后关闭集显，要使用集显上的接口需要单独设置。
如果接口允许，最好将两个显示器都接在独显上。
基于KDE等桌面 如果主板和显卡驱动正常，一般各大桌面环境都支持GUI配置，可以在显示设置里直接修改。
使用 xrandr 识别和控制显示器 xrandr 直接执行会得到显示器的连接状态，获取显示器的名称后可以用下面的命令显示。
（其中DVI-I-1-1与VGA1为两个显示器的名称）
xrandr --output DVI-I-1-1 --mode 1440x900 --primary --output VGA1 --mode 1366x768 --pos 1440x132 设置输出的显示器以及显示参数，每个--output后接显示器名以及参数，--mode指定分辨率，--primary指定主显示器，--pos指定位置，或者用--right-of指定相对位置。
更进一步的设置可以在arch wiki
xrandr 找不到显示器 xrandr &amp;ndash;listproviders 得到当前的显示器输入设备（一般name为Intel的是集显，name为nouveau的是开源独显驱动，Nvidia为闭源显卡驱动）
xrandr &amp;ndash;setprovideroutputsource 0 1 将上面的设备设置为输入源
如果xrandr &amp;ndash;listproviders 没有得到所有的输入源，则需要折腾驱动。
驱动问题 一般建议将两个显示器都接在独显上，出问题的概率更低（独显一般口不够或者需要转换略尴尬）。
我将显示器分别接在独显和主板接口上，在manjaro和deepin两个系统下都发现NVIDIA驱动有问题，primary显示器会显示两个显示器的内容。而将显卡驱动切换到开源驱动（nouveau）时正常(据说开源驱动性能略低）。
mhwd -li --pci 查看已经安装的驱动 mhwd -l --pci 查看能用的驱动 sudo mhwd -r pci video-nvidia 移除驱动video-nvidia sudo mhwd -a pci videa-linux 安装开源显卡驱动（nouveau） manjaro上通过mhwd简化了各种配置，详见：
https://wiki.manjaro.org/index.php/Configure_Graphics_Cards
AwesomeWM 默认快捷键：
ctrl+super+j/k 屏幕之间焦点移动 super+o 当前窗口移动到另一个屏幕</description>
    </item>
    
    <item>
      <title>manjaro (arch) 安装搜狗输入法</title>
      <link>https://extendswind.top/posts/technical/sogou_input_install_in_arch_manjaro/</link>
      <pubDate>Mon, 21 Jan 2019 20:59:49 +0800</pubDate>
      
      <guid>https://extendswind.top/posts/technical/sogou_input_install_in_arch_manjaro/</guid>
      <description>本来还很简单的事，被默认的选项弄出一堆坑
步骤 先安装fcitx用来管理输入法，然后安装搜狗输入法并配置，然后添加环境变量使相关的应用默认加载fcitx。
1. 安装fcitx以及配置 sudo pacman -S fcitx fcitx-im fcitx-configtool
fcitx 为基础安装包，fcitx-im用于GTK/QT等界面上使用的包，fcitx-configtool为配置界面（kde下还能安装一个kde版的configtool）。
2. 安装搜狗输入法 yaourt fcitx-sogoupinyin
此处有坑，默认的安装方式会编译安装qtwebkit，速度非常的慢（一个小时午觉后还没好&amp;hellip;)
在库的官方说明中（来自 https://aur.archlinux.org/packages/fcitx-sogoupinyin/ ）依赖项为qtwebkit (qtwebkit-bin)
其实只依赖qtwebkit-bin，因此先安装qtwebkit-bin可以解决依赖问题（不到一分钟&amp;hellip;)
 yaourt -S qtwebkit-bin
3. fcitx 设置中添加搜狗拼音 fcitx configuration中点加号添加sogou pinyin（默认语言为英语时需要勾选一个选项）
4. fcitx环境变量的添加 gui应用的环境变量一般不通过profile和bashrc。
arch wiki下的内容：
  KDM, GDM, LightDM 等显示管理器，请使用 ~/.xprofile arch wiki 警告: 上述用户不要在~/.xinitrc中加入下述脚本，否则会造成无法登陆。(但在里头加了也没挂) 如果您用 startx 或者 Slim 启动，请使用~/.xinitrc 中加入
  export GTK_IM_MODULE=fcitx export QT_IM_MODULE=fcitx export XMODIFIERS=@im=fcitx
  如果你使用的是较新版本的GNOME，使用 Wayland 显示管理器，则请在/etc/environment中加入
  GTK_IM_MODULE=fcitx QT_IM_MODULE=fcitx XMODIFIERS=@im=fcitx</description>
    </item>
    
    <item>
      <title>arch linux (manjaro) 下运行tim和qq</title>
      <link>https://extendswind.top/posts/technical/tim_install_wine/</link>
      <pubDate>Sun, 20 Jan 2019 21:59:49 +0800</pubDate>
      
      <guid>https://extendswind.top/posts/technical/tim_install_wine/</guid>
      <description>基于AUR的安装是没什么难度了，主要安装后会出各种问题，还有选不同的包的影响。
官方的wiki上推荐安装deepin-wine-tim，基于wine和最新版的tim。安装后存在qq密码每次都要输入的问题（201804测试没有此问题，但还是不太稳定，2018年因为wine的更新导致挂了两次只能回退）。
更推荐使用的deepin.com.qq.office，基于deepin-wine，配置好了比较稳定。
ps: 2021年12月更新，AUR里com.qq.tim.spark从Spark应用商店的移植实现的效果也差不多，deepin-wine-time 已经从wine转到了deepin-wine，各方面的问题也有比较好的解决方案，外加作者一直在积极更新。项目地址上有一些问题的解决方案：
https://github.com/vufa/deepin-wine-tim-arch
新版本的更新在不同的环境下出现了一些新问题，建议在各个仓库对应的github链接以及一直更新的arch wiki上找找最新的方案。
安装步骤 安装  yaourt -S deepin.com.qq.office
ps：吐槽，安装deepin-wine的各个确认略多。 d
qq提取消息、截图等快捷键设置 在/opt/deepinwine/tools/sendkeys.sh脚本能够传递快捷键，如直接运行./sendkeys.sh a 则会向qq或tim进程发送 ctrl+alt+a。
不同桌面环境添加快捷键的方法差不多，主要步骤：
 setting -&amp;gt; keyboard -&amp;gt; shortcut 添加快捷键，选择上面的脚本，在脚本后面加上a 指定运行脚本的快捷键  此时按快捷键后相当于qq中按 ctrl+alt+a (截图)
同理可以设置qq其它快捷键
一般问题 大多出现在基于wine的tim上，基于deepin的tim问题很少。
deepin-wine在非gnome系的桌面上的运行问题 3wm, kde, awesome等桌面管理器或桌面环境里运行基于deepin-wine的qq和tim时，会出现下面的错误
  X Error of failed request: BadWindow (invalid Window parameter) Major opcode of failed request: 20 (X_GetProperty)
由于deepin-wine依赖了gnome系（mate,cinnamon,gnome）的setting-daemon，需要安装后运行（一般加入开机启动）
sudo pacman -S cinnamon-settings-daemon /usr/lib/cinnamon-settings-daemon/csd-xsettings 无法输入中文 如果其它地方可以使用输入法，一般为环境变量的问题，fcitx没有配置好。
粗暴解决方式: 下面的文件夹中加入环境变量</description>
    </item>
    
    <item>
      <title>在非gnome系桌面环境下运行deepin-wine tim的错误解决</title>
      <link>https://extendswind.top/posts/technical/deepin_wine_run_in_not_gnome_desktop_environment/</link>
      <pubDate>Sun, 20 Jan 2019 20:59:49 +0800</pubDate>
      
      <guid>https://extendswind.top/posts/technical/deepin_wine_run_in_not_gnome_desktop_environment/</guid>
      <description>i3wm, kde, awesome等桌面管理器或桌面环境里运行基于deepin-wine的qq和tim时，会出现下面的错误
  X Error of failed request: BadWindow (invalid Window parameter) Major opcode of failed request: 20 (X_GetProperty)
在gnome、mate、cinnamon三个桌面上运行较好，xfce4上运行有少许焦点上的bug，其它桌面环境和管理器下直接出上面的错误。
最近终于在aur上看到是因为deepin-wine依赖了gnome-settings-daemon（gnome系的cinnamon和mate的对应组件也能用），启动后就能正常运行，但AwesomeWM会使用xsettings对应的主题，KDE基本正常运行，其它非gnome系的桌面环境未测试。
解决方案 1. 安装gnome-settings-daemon (arch 系） sudo pacman -S gnome-settings-daemon ubuntu 下的包和运行的程序名略不一样，参考：
https://github.com/wszqkzqk/deepin-wine-ubuntu/issues/12#issuecomment-443656358
2. 在tim启动脚本中加入启动 /opt/deepinwine/apps/Deepin-TIM/run.sh 的文件前添加下面的行：
/usr/lib/gsd-xsettings &amp;amp;
注意 主要缺点——影响主题（某些桌面环境） AwesomeWM在使用xsettings之后，主题等需要与对应的xsettings设置相对应。如使用gnome-settings-daemon时，需要在gnome的设置里更改主题。使用lxappearance修改主题只会更改~/.gtkrc-2.0等文件，不会生效。
csd-xsettings 的影响 因为大小和简洁的原因从gnome的xsettings换到了cinnamon的xsettings，下面的设置在gsd-xsettings上未测试。
csd-xsettings 主要影响两个地方：1. 启动过程； 2. 在tim内调用外部程序打开链接的过程（如打开网页、打开本地目录）。
可以考虑启动后关闭对tim，可以避免影响系统主题一类的问题，但会导致无法调用外部程序。加上运行后5s关闭的参数即可:
/usr/lib/cinnamon-settings-daemon/csd-xsettings --exit-time 5 &amp;amp;
附：使用cinnamon的xsettings的设置 主题的问题在awesome这种环境下略坑，懒得去试gnome上的主题设置需要哪些包，安装整个gnome的包需要800多M，直接安装了cinnamon的基础包（90M左右）。和gnome只是些名字上的区别：
sudo pacman -S cinnamon  # awesome的autorun里加入下面程序使开机运行 /usr/lib/cinnamon-settings-daemon/csd-xsettings 在系统设置里可以下载和更改主题
小坑   tim和qq会在点击好友图像时卡死的情况。原因之一可能是pulseaudio进程，kill掉就行，会影响声音的调整。（千里之外的两个程序不知道为什么会卡一起）</description>
    </item>
    
    <item>
      <title>zotero zotfile插件 pdf附件文件夹在多系统下的同步设置</title>
      <link>https://extendswind.top/posts/research/zotero_multiple_directory_pdf_sync/</link>
      <pubDate>Wed, 09 Jan 2019 09:59:49 +0800</pubDate>
      
      <guid>https://extendswind.top/posts/research/zotero_multiple_directory_pdf_sync/</guid>
      <description>之前的附件使用zotfile单独的文件夹管理，换了一块硬盘，挂载目录发生变化后zotero里所有的附件都打不开，在zotero的目录设置和zotfile的目录设置里改了都没用。
使用sqllite的浏览器看了一眼zotero的存储数据库(zotero.sqlite)，在表itemAttachments中存储了所有附件的类型地址等信息，发现里头的地址全都使用的绝对路径！！
重点在于设置zotero和zotfile的附件路径和转移文件。
使用网盘同步的不用折腾这些。
方法一：设置为相对路径并修改文件 设置  zotero preferences -&amp;gt; Files and Folders -&amp;gt; Linked Attachment Base Directory 设置存储路径 （注意不是 data directory） 把zotfile里的路径也改到这（不知道具体什么机制，zotfile有个相对路径的pull request不知道读的是不是这个，懒得多折腾）  已有的文件移动   如果由于换硬盘换系统一类的问题，先使用软连接指向原来的目录，让zotero能够找到原来的文件。（源目录可以使用sqllite的浏览器看到）
  在library下全选所有的items，然后右键 Manage Attachments -&amp;gt; Rename Attachments。（看起来是重命名，实质上会移动所有的文件）
  此时此前附件中的绝对路径/mnt/data/...会变成attachments：catagory1/test1.pdf 类似的相对路径。
方法二：直接操作sqllite数据库来改 下面的语句供参考，建议稍了解后操作，使用update导致数据丢失会很麻烦。
把下面路径中的/home/fly/public_download/改成自己数据库里的路径即可。
update itemAttachments set path=replace(path, &amp;#39;/home/fly/public_download/&amp;#39;, &amp;#39;attachments:&amp;#39;) where path like &amp;#39;/home/fly/public_download%&amp;#39; 最后 跨操作系统或者跨目录直接设置到相同的目录即可。</description>
    </item>
    
    <item>
      <title>arch linux下网易云音乐运行没反应，只能使用root用户运行</title>
      <link>https://extendswind.top/posts/technical/netease_music_can_not_open/</link>
      <pubDate>Tue, 20 Nov 2018 19:59:49 +0800</pubDate>
      
      <guid>https://extendswind.top/posts/technical/netease_music_can_not_open/</guid>
      <description>最近打开网易云音乐没有反应，只在htop命令下能看到运行的进程（manjaro+mate+awesome）。
命令行sudo可以正常运行
无用尝试  安装官网给的最新1.1.3的deepin与ubuntu16两个版本 网上提到的&amp;ndash;no-sandbox参数运行 kill已经运行的netease-cloud-music相关进程  解决方案 回退到更早的1.0.0版，估计新版没有在各个linux系统下测试。
http://s1.music.126.net/download/pc/netease-cloud-music_1.0.0-2_amd64_ubuntu16.04.deb
debian系就直接dpkg -i吧
arch系通过AUR安装稍麻烦:
 卸载原版本 yaourt -S netease-cloud-music 按y Edit PKGBUILD 将1.1.3的安装包地址替换为1.1.0的安装包地址，并且将对应hash值改为skip，具体如下  改之前：
source=( &amp;#34;http://packages.deepin.com/deepin/pool/main/n/netease-cloud-music/netease-cloud-music_${pkgver}-${_pkgrel}_amd64.deb&amp;#34; &amp;#34;http://music.163.com/html/web2/service.html&amp;#34; ) md5sums=(&amp;#39;53c47c1bf6797b2a0e455bc59833ab2d&amp;#39; &amp;#39;SKIP&amp;#39;) 改之后
source=( &amp;#34;http://s1.music.126.net/download/pc/netease-cloud-music_1.0.0-2_amd64_ubuntu16.04.deb&amp;#34; &amp;#34;http://music.163.com/html/web2/service.html&amp;#34; ) md5sums=(&amp;#39;SKIP&amp;#39; &amp;#39;SKIP&amp;#39;) 然后正常安装即可</description>
    </item>
    
    <item>
      <title>使用AwesomeWM作为Mate(Gnome相同) Desktop的窗口管理器</title>
      <link>https://extendswind.top/posts/technical/using_awesomewm_as_wm_of_mate_desktop/</link>
      <pubDate>Sat, 20 Oct 2018 20:59:49 +0800</pubDate>
      
      <guid>https://extendswind.top/posts/technical/using_awesomewm_as_wm_of_mate_desktop/</guid>
      <description>20190118更新:
最近发现有在非gnome系的DE下运行deepin-wine的解决方案，没必要专门跑一个mate。
安装gnome-setttings-daemon，然后运行/usr/lib/gsd-xsettings。（不同系统会不一样）
具体记录在另一篇博客
 AwesomeWM这种平铺的窗口管理器用得很爽，只是基于wine的qq最近又莫名其妙抽风，感觉还是切到deepin-wine上比较靠谱。而deepin-wine在awesome下运行qq会报错X Error of failed request: BadWindow (invalid Window parameter) Major opcode of failed request: 20 (X_GetProperty)，而在Gnome系下运行正常。看到Gnome和Mate能够运行awesomewm，就折腾了一下试试。
Awesome只是Gnome等桌面管理器的组件之一，gnome系的Mate可以修改默认的窗口管理器。
具体折腾   安装AwesomeWM、Mate桌面环境与dconf-editor（arch下使用pacman -S）。
  进入Mate桌面环境后，修改org.mate.session.required-components windowmanager 的值为&amp;rsquo;awesome&amp;rsquo;，如果不需要桌面上的图标，可以将org.mate.session.required-components的值只留下windowmanager。
  上面的设置无法通过命令行打开awesome，需要添加awesome的图标。在/usr/share/applications目录下新建awesome.desktop，内容如下（网上直接粘的，估计有些可以不要，懒得试了）：
  [Desktop Entry] Type=Application Name=awesome Exec=awesome NoDisplay=true # name of loadable control center module X-MATE-WMSettingsModule=awesome # name we put on the WM spec check window X-MATE-WMName=awesome # back compat only X-MateWMSettingsLibrary=awesome X-MATE-Bugzilla-Bugzilla=MATE X-MATE-Bugzilla-Product=awesome X-MATE-Bugzilla-Component=general X-MATE-Autostart-Phase=WindowManager X-MATE-Provides=windowmanager X-MATE-Autostart-Notify=true </description>
    </item>
    
    <item>
      <title>使用u盘安装linux(manjaro)时Grub报错</title>
      <link>https://extendswind.top/posts/technical/manjaro_install_problem_grub/</link>
      <pubDate>Tue, 17 Jul 2018 20:59:49 +0800</pubDate>
      
      <guid>https://extendswind.top/posts/technical/manjaro_install_problem_grub/</guid>
      <description>错误   error: invalid arch-independent ELF magic. Entering rescue mode&amp;hellip; grub rescue&amp;gt;
使用Rufu ISO模式烧录的U盘，lagency 模式能够启动，但点安装后出上面错误；UEFI模式直接出上面错误。
解决方案 不多说，百度背锅，google答案的前几个就是正解。
U盘烧录问题，使用rufu烧录U盘时，最好使用DD模式而非ISO模式。（去年安装manjaro-xfce4时用ISO模式没出过）
https://forum.manjaro.org/t/grub-error-computer-with-no-os-installed-invalid-arch-independent-elf-magic/21805
解决方案：使用Rufu烧录U盘，点开始后会有选择DD模式或者ISO模式，此时选DD模式，然后UEFI启动即可。
论坛上还推荐使用etcher</description>
    </item>
    
    <item>
      <title>开启不折腾模式</title>
      <link>https://extendswind.top/posts/technical/from_geeker_to_no_self_inflicted/</link>
      <pubDate>Tue, 17 Jul 2018 20:59:49 +0800</pubDate>
      
      <guid>https://extendswind.top/posts/technical/from_geeker_to_no_self_inflicted/</guid>
      <description>用了很长一段时间的linux，和很多人对linux相比windows的优点评价相同，linux是非常自由的操作系统。从内核到桌面环境到各个应用都可以自行定制，能够完全按照自己的喜好修改，实在没有的功能甚至能够自己造轮子。
也因此对于我这样的强迫症患者，在各个组件上都想追求一个最舒适的解决方案。这样一个系统确实用得舒服，但也总有用得不舒服的地方需要持续改善，不断调整各个组件以及造一些脚本级的轮子。
最近连续几周效率严重偏低，也突然发现自己在这些看似意义不大的地方耗费的时间太多。一个emacs各种折腾最后只是写写简单的c++、Python和org；awesomeWM嵌入Mate其实相比传统的多workspace方式也没特别大的区别；软件尽可能找到开源替代与商业版本隔离。
或许太多时候以geek自居追求某种“无强迫”环境，而忘记要事优先。
提醒一下自己刚开始读研的目标，在一堆感兴趣的hello world基础之上有所深入。
感兴趣的技术太多，总要有所舍弃。
linux是用来折腾的，更是用来解决问题的。</description>
    </item>
    
    <item>
      <title>linux桌面发行版简介</title>
      <link>https://extendswind.top/posts/technical/linux_desktop_distribution/</link>
      <pubDate>Fri, 29 Jun 2018 20:59:49 +0800</pubDate>
      
      <guid>https://extendswind.top/posts/technical/linux_desktop_distribution/</guid>
      <description>linux系统 桌面操作系统：windows，MacOS和各linux发行版。
2017年数据，windows份额超过90%，MacOS约6%，Linux份额最高的记录在2016年7月创下，是2.33%。
貌似用linux和MacOS的大多是程序员了。MacOS和linux系统正常使用（看书、上网、看电影等）已经比较成熟，没有太大的体验差异。
linux系统的主要缺点：
 某些常用软件在linux上没有或运行有问题（qq、迅雷、office等，只有deepin通过虚拟windows系统解决得稍好） 完美折腾需要掌握大量相关知识，不折腾难以体现其优点 某些设置复杂（较好的发行版已有极大的改善，某些操作需要使用命令）  linux作为桌面系统主要优点（作为服务器系统广泛使用不谈）：
 软件管理容易 可定制性超强 免费（看版权意识）  对于开发人员，大部分的软件一键安装还解决依赖问题，想要的操作大部分可以通过修改配置和安装软件实现。在运行某些开发软件会明显感觉更快，绝大部分配置通过文本文件容易修改。
linux发行版 一般的linux发行版包括：Linux内核，一些GNU程序库和工具，命令行shell，图形界面的X Window系统和相应的桌面环境，以及一系列其他的软件包（浏览器、阅读器、文本编辑器等）。由各种组织和个人维护。
主要用过的几个桌面发行版：  也许桌面用户最多的Ubuntu 不折腾的Arch系Manjaro （当前主力） 和Manjaro在distrowatch上争第一的Ubuntu进化版Mint 号称最美linux的Elementary 超稳定适合服务器的版本Centos （只在服务器上用） 最强国产化linux的Deepin和一般国产化的优麒麟  下面叙述中不包含在内的主要道听途说
主流的发行版 debian系：Debian -&amp;gt; Ubuntu -&amp;gt; Mint | Elementary | Deepin | 优麒麟 fedora : Fedora -&amp;gt; RHEL -&amp;gt; Centos | Oracle linux SUSE : SUSE -&amp;gt; SLES -&amp;gt; openSUSE (没有用过，大多对其评价较为中立，暂不讨论) arch : Arch -&amp;gt; Manjaro gantoo
其中箭头后的系统基于前面的系统发展，但并不影响前面系统的优势。如Ubuntu基于Debian系统成为较好的桌面系统，但Debian由于其轻量级和可定制仍有广泛使用。
发行版之间主要区别 不同发行版的主要区别在于桌面环境、软件包管理器、软件包以及软件包版本的不同。</description>
    </item>
    
  </channel>
</rss>
