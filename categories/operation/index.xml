<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Operation on A Notebook of Extendswind</title>
    <link>https://extendswind.top/categories/operation/</link>
    <description>Recent content in Operation on A Notebook of Extendswind</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sat, 04 Dec 2021 00:00:00 +0800</lastBuildDate><atom:link href="https://extendswind.top/categories/operation/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>syncthing文件同步网盘配置</title>
      <link>https://extendswind.top/posts/technical/syncthing_install_for_vps/</link>
      <pubDate>Sat, 04 Dec 2021 00:00:00 +0800</pubDate>
      
      <guid>https://extendswind.top/posts/technical/syncthing_install_for_vps/</guid>
      <description>在需要同步的文件不太大时，坚果云一类的网盘的效果不错，安装软件即可，不需要折腾还功能多。不考虑同步功能，只是想要存数据的话，NAS一般就可以满足要求。owncloud、nextcloud一类的私有云网盘提供了更多的功能，如可以浏览器查看分享文件。
相比之下，Syncthing只是一个纯粹的文件同步软件。主要优点是配置简单，没有其它的依赖，配置局域网的文件同步以及vps的文件同步实现起来容易，不像私有网盘程序依赖一套数据库、php、web服务等。但是缺点也很明显，没有什么多余的功能，无法单独上传和下载文件，也不能直接分享单个文件。
简单配置 linux的包管理器大多可以直接安装，然后运行Syncthing就可以启动，默认只提供了浏览器的web端管理UI，在 127.0.0.1:8384 访问。
两个节点都安装启动后，可以直接通过id添加对方。运行Syncting的各个节点之间没有主从的区别，通过共享文件夹的方式全部同步为相同的文件状态。添加后需要在对方的web UI中确认。
如果在没有桌面环境的linux服务器（如VPS）上安装，需要在 ~/.config/syncthing/config.xml 配置中将127.0.0.1改为0.0.0.0，防火墙放开8384端口、22000端口。然后在本地浏览器中用服务器 ip:8384 访问。
直连服务器配置 在局域网内或者连接有公网ip的主机时，会默认使用直连的方式。当两个主机不能直接连接，或者网络状态不好时，会通过relay中继服务器连接。
VPS的web UI中直连的listener选项卡为：
 quic://0.0.0.0:22000
tcp://0.0.0.0:22000
 连接VPS时，在address选项中将上面0.0.0.0替换成VPS服务器的ip，替代默认的dynamic即可。
文件版本保存 一个文件可能会修改多次，文件夹的设置中有File Version选项，可以按时间、修改次数、删除等方式备份多个版本，具体设置界面有说明。
安全相关 每个节点的id不包含隐私信息，连接时以及分享文件夹时都需要在两个节点的web UI中确认，id没必要加密保存。节点之间的数据传输通过TLS加密，不用太考虑中心服务器导致的隐私问题。
web UI 页面直接暴露给外网可能会容易被被端口扫描后攻击，可以设置密码加强安全性。或者通过反向代理隐藏web UI的端口，具体配置在 https://docs.syncthing.net/users/reverseproxy.html。关于反向代理踩的一个小坑：nginx设置中的location /syncthing/后面的斜杠不能漏。
文件分享 Syncthing不支持文件分享，只能间接的处理，下面放个简单的nginx配置解决web服务中分享某个文件文件的下载功能。（至于上传，可以考虑sftp、samba一类的服务，这个比较弱）
 location /file_share/ { alias /home/user/Syncthing/public/; autoindex on; autoindex_exact_size off; # 文件大小显示MB，GB单位，默认为b； autoindex_localtime on; # 服务器本地时区显示文件修改日期 } 基本原理 同步设计上首先将大文件切割成block，小文件直接单独作为block（和HDFS的操作类似）。对每个block计算hash值，通过hash值判断文件的完整性和变化（可以自动识别重命名）。当发生文件变化时，操作系统会通知Syncthing程序，Syncthing程序之间传输元数据信息以及变化的数据。
连接上每个Syncthing程序通过唯一id识别，默认打开了本地发现（local discovery）和全网发现（global discovery）。本地发现能够在添加其它节点时自动找到局域网内的其它服务，全局发现依赖了额外的官方服务器，能根据id直接找到对应的节点（不确定ip是通过id算出来的还是全局发现找到的）。
为了使不在同一个局域网下的节点能够同步，官方提供了relay服务器作为中介，不在局域网内的同步默认可以直接通过官方relay服务器进行，也可以自己在有公网ip的机器上架服务。relay服务默认为开启状态，局域网内的节点可能由于网络状况等问题从直连转为relay连接，在配置的web GUI中的Remote Devices下的address中可以看到是直接的ip还是带relay的ip，此处配置可以修改。
Sycnthing默认有几个地方会连接官方服务器：1. 使用数据收集（第一次打开web UI会询问是否同意）；2. 全局发现；3. relay中继服务器。为了方便无所谓，如果只是想单纯在网络可以互通的环境下使用文件同步，可以考虑在设置中把这几个都关了。</description>
    </item>
    
    <item>
      <title>使用Python3发布博客到支持mateweblog的平台（博客园等）</title>
      <link>https://extendswind.top/posts/technical/python3_publish_blog/</link>
      <pubDate>Tue, 04 Sep 2018 10:30:00 +0800</pubDate>
      
      <guid>https://extendswind.top/posts/technical/python3_publish_blog/</guid>
      <description>用个人域名搭建的博客在百度搜索上的SEO太差，百度一直只收录主页，懒得再为这些问题折腾，直接同步到博客园算了，考虑用Python。
貌似CSDN已经关闭了metawebblog接口，只在博客园上测试。
Python发博客的主要方案  通过xmlprc的metaweblog接口（首选） CSDN和博客园的api（定位不是用来发博客的，申请key和调接口略麻烦） 使用抓包的技术模拟浏览器登录发博客（没悬念更折腾）  代码 对于支持metaweblog的博客平台，只要提供用户名、密码和博客相关信息。
python2 需要将后面的xmlrpc.client改为xmlrpclib，并且import xmlrpclib
#!/bin/python3  import xmlrpc.client  username = &amp;#39;&amp;#39; # TODO your username passwd = &amp;#39;&amp;#39; # TODO your passwd # url = &amp;#39;http://www.cnblogs.com/&amp;#39; + username + &amp;#39;/services/metaweblog.aspx&amp;#39; # 此链接已挂 url = &amp;#39;https://rpc.cnblogs.com/metaweblog/&amp;#39; + username  title = &amp;#34;helloWorld&amp;#34; content = &amp;#34;&amp;lt;p&amp;gt; test &amp;lt;p&amp;gt;&amp;#34; tags = &amp;#34;tag1, tag2&amp;#34;  blogProxy = xmlrpc.client.ServerProxy(url)  # 获取最近博客列表 print(blogProxy.metaWeblog.getRecentPosts(&amp;#39;&amp;#39;, username, passwd, 1))  # 发布博客 blogProxy.</description>
    </item>
    
    <item>
      <title>静态blog的免费托管部署、加域名与搜索优化（SEO）</title>
      <link>https://extendswind.top/posts/technical/hugo_blog_host_and_seo/</link>
      <pubDate>Tue, 04 Sep 2018 10:30:00 +0800</pubDate>
      
      <guid>https://extendswind.top/posts/technical/hugo_blog_host_and_seo/</guid>
      <description>给博客加个域名准备长用，Hugo生成后一直放在github page上，为了让百度能搜到费了一堆事。
问题 如果只是在github page上弄个自己域名的网站，只需要在结果文件中添加一个CNAME文件，写入网站域名，然后在域名运营商提交解析。等待域名解析生效后即可通过域名访问。
然后为了让搜索引擎能够检索，通过baidu、bing、google的站长工具提交链接。
此时发生一个大bug，github因为某种原因限制了百度爬虫的进入，也就是百度上很少搜到github内网页的原因。
重点解决的问题为：github page上的内容无法被百度检索。
解决方案 相关解决github page被检索的方案较多，重点都是通过CDN缓存网站和将网站托管在其它地方两个方案。
CDN略麻烦，还需要其它的服务。 在各种折腾之后选择了托管在netlify上，然后在百度站长工具中提交网站。
还没完 Hugo的sitemap百度无法识别 Hugo默认可以使用多语言，当设置了中文和英文时，默认路径下的sitemap会指向两种语言的sitemap路径而非直接的网页，百度无法识别&amp;hellip;.
解决方案，只设置一种语言。
百度长时间只收录主页（收录链接数为1） 百度能看到一堆人碰到类似的问题。
有解决方案建议放在CSDN一类的普通博客上，并附上链接，百度时间长了会自动收录。（google就没这问题&amp;hellip;）
还有稳定更新，提高博客的质量。
然后静静的等待&amp;hellip;.
附：国内外的免费静态网站托管 国外代码托管系列
 netlify，最好最方便，没有之一，添加域名和github仓库的地址就能解决问题，github上的提交还会自动同步。 github page，网页放上去选择显示的分支即可，网速虽然没有飞起但在教育网下还行，主要问题在于上面提到的，百度搜索不到&amp;hellip; gitlab，同github，但使用了Docker技术提高了构建能力，能够上传源博客在服务端构建。只是折腾了一会，fork的项目构建网页一直失败，懒得再debug&amp;hellip; bitbucket，同github，一个大bug在于不能直接添加域名，域名解析过去无效，需要额外的服务（又是一堆配置）  国内代码托管
 码云，同github，但添加域名是收费功能。 coding，之前博客提到的最多，貌似最近加入了广告，进入网页前几秒会跳入广告页（略不能忍）。  </description>
    </item>
    
  </channel>
</rss>
